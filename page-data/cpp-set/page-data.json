{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/cpp-set/",
    "result": {"data":{"cur":{"id":"7dc12f75-1ab7-597e-8cfb-849e2ebb85cf","html":"<h1 id=\"set\" style=\"position:relative;\"><a href=\"#set\" aria-label=\"set permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set</h1>\n<p>C++의 Set은 노드 기반 컨테이너이며 균형 이진트리로 구현되어 있습니다.</p>\n<p>Key라 불리는 원소들의 집합으로 이루어진 컨테이너 입니다.(Key 중복X)</p>\n<p>원소가 삽입되면 자동으로 정렬되고, default 정렬 기준은 오름차순입니다.</p>\n<h2 id=\"사용법\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용법</h2>\n<p><set> 헤더 파일에 들어있습니다.</p>\n<p>기본 선언 방법은 <code class=\"language-text\">set&lt;[Data Type] > [변수 이름];</code> 입니다.</p>\n<h3 id=\"생성자\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90\" aria-label=\"생성자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성자</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> s<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 기본 선언</span>\nset<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">s2</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// s1을 복사한 s2</span></code></pre></div>\n<h3 id=\"멤버-함수\" style=\"position:relative;\"><a href=\"#%EB%A9%A4%EB%B2%84-%ED%95%A8%EC%88%98\" aria-label=\"멤버 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>멤버 함수</h3>\n<ol>\n<li>begin()</li>\n</ol>\n<p>반환: 맨 첫번째 원소를 가리키는 반복자를 리턴(참조)</p>\n<p>예시: <code class=\"language-text\">set&lt;int>::iterator iter = s.begin();</code></p>\n<ol start=\"2\">\n<li>end()</li>\n</ol>\n<p>반환: 맨 마지막 원소의 다음을 가리키는 반복자를 리턴(참조)</p>\n<p>예시: <code class=\"language-text\">set&lt;int>::iterator iter = s.end();</code></p>\n<ol start=\"3\">\n<li>rbegin(), rend()</li>\n</ol>\n<p>begin(), end()와 반대로 작동하는 멤버함수</p>\n<p>역으로 출력하고 싶을 때 사용</p>\n<p>예시:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>iter <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">rbegin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> iter <span class=\"token operator\">!=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">rend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> iter<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span> iter <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"4\">\n<li>clear()</li>\n</ol>\n<p>모든 원소를 제거, 초기화할 때 사용</p>\n<p>예시: <code class=\"language-text\">s.clear();</code></p>\n<ol start=\"5\">\n<li>count(k)</li>\n</ol>\n<p>원소 k의 갯수를 반환, set은 항상 0, 1을 반환</p>\n<p>예시: <code class=\"language-text\">int count = s.count(1);</code></p>\n<ol start=\"6\">\n<li>empty()</li>\n</ol>\n<p>비어있는지 확인, 반환은 true, false</p>\n<p>예시: <code class=\"language-text\">if(s.empty()) { ... }</code></p>\n<ol start=\"7\">\n<li>insert(k)</li>\n</ol>\n<p>원소 k를 삽입합니다.</p>\n<p>반환: <code class=\"language-text\">pair&lt;iterator, boo></code> pair.first: 삽입한 원소를 가리키는 반복자, pair.second: true(성공) / false(실패)</p>\n<p>예시: <code class=\"language-text\">s.insert(1);</code></p>\n<ol start=\"8\">\n<li>erase(iter)</li>\n</ol>\n<p>iter가 가리키는 원소를 제거</p>\n<p>반환: 제거 한 원소의 다음 원소를 가리키는 반복자를 리턴</p>\n<p>예시: <code class=\"language-text\">iter = s.erase(iter);</code></p>\n<ol start=\"9\">\n<li>find(k)</li>\n</ol>\n<p>반환: 원소 k를 가리키는 반복자를 반환, 원소 k가 없으면 s.end()와 같은 반복자를 반환</p>\n<p>예시: <code class=\"language-text\">iter = s.find(1);</code></p>\n<ol start=\"10\">\n<li>s2.swap(s1)</li>\n</ol>\n<p>s1과 s2를 바꾼다.</p>\n<ol start=\"11\">\n<li>s.upper_bound(k)</li>\n</ol>\n<p>원소 k가 끝나는 구간의 반복자를 반환한다.</p>\n<p>예시: <code class=\"language-text\">iter = s.upper_bound(1);</code></p>\n<ol start=\"12\">\n<li>s.lower_bound(k)</li>\n</ol>\n<p>원소 k가 시작하는 구간의 반복자를 반환</p>\n<p>예시: <code class=\"language-text\">iter = s.lower_bound(1);</code></p>\n<ol start=\"13\">\n<li>s.equal_range(k)</li>\n</ol>\n<p>원소 k가 시작하는 구간과 끝나는 구간의 반복자 pair 객체를 반환</p>\n<p>lower_bound(k)와 upper_bound(k)를 pair 객체에 담아서 반환한다.</p>\n<ol start=\"14\">\n<li>s.size()</li>\n</ol>\n<p>원소의 갯수를 반환</p>\n<h1 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h1>\n<p><a href=\"https://blockdmask.tistory.com/79\">[C++] set container 정리 및 사용법 (tistory.com)</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%82%AC%EC%9A%A9%EB%B2%95\">사용법</a></p>\n<ul>\n<li><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90\">생성자</a></li>\n<li><a href=\"#%EB%A9%A4%EB%B2%84-%ED%95%A8%EC%88%98\">멤버 함수</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"Set C++의 Set은 노드 기반 컨테이너이며 균형 이진트리로 구현되어 있습니다. Key라 불리는 원소들의 집합으로 이루어진 컨테이너 입니다.(Key 중복X) 원소가 삽입되면 자동으로 정렬되고, default 정렬 기준은 오름차순입니다. 사용법  헤더 파일에 들어있습니다. 기본 선언 방법은  입니다. 생성자 멤버 함수 begin() 반환: 맨 첫번째 원소를 가리키는 반복자를 리턴(참조) 예시:  end() 반환: 맨 마지막 원소의 다음을 가리키는 반복자를 리턴(참조) 예시:  rbegin(), rend() begin(), end()와 반대로 작동하는 멤버함수 역으로 출력하고 싶을 때 사용 예시: clear() 모든 원소를 제거, 초기화할 때 사용 예시:  count(k) 원소 k의 갯수를 반환, set은 항상 0, 1을 반환 예시:  empty() 비어있는지 확인, 반환은 true, false 예시:  insert(k) 원소 k를 삽입합니다. 반환:  pair.first: 삽입한…","frontmatter":{"date":"January 28, 2022","title":"Set","categories":"CPP","author":"JaeseokWoo","emoji":"⌨️"},"fields":{"slug":"/cpp-set/"}},"next":{"id":"f0988307-1c99-525c-8668-bc6b06a4d0d5","html":"<h1 id=\"mathmax\" style=\"position:relative;\"><a href=\"#mathmax\" aria-label=\"mathmax permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Math.max()</h1>\n<p>Math.max() 함수는 입력값으로 받은 0개의 이상의 숫자 중 가장 큰 숫자를 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\n\n<span class=\"token keyword\">const</span> array1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>array1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3 배열에 전개 구문 사용 Spread syntax</span></code></pre></div>\n<h2 id=\"문법\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EB%B2%95\" aria-label=\"문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문법</h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>값<span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>값<span class=\"token number\">0</span><span class=\"token punctuation\">,</span> 값<span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>값<span class=\"token number\">0</span><span class=\"token punctuation\">,</span> 값<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">,</span> 값<span class=\"token constant\">N</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"매개변수\" style=\"position:relative;\"><a href=\"#%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98\" aria-label=\"매개변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>매개변수</h3>\n<p><code class=\"language-text\">값1, 값2, ...</code></p>\n<p>가장 큰 값을 선택하고 반환할 0개 이상의 숫자</p>\n<h3 id=\"반환-값\" style=\"position:relative;\"><a href=\"#%EB%B0%98%ED%99%98-%EA%B0%92\" aria-label=\"반환 값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반환 값</h3>\n<p>입력된 숫자 중 가장 큰 숫자를 반환한다.</p>\n<p>만약 인수 중 하나라도 숫자로 변환하지 못한다면 <code class=\"language-text\">NaN</code>을 반환한다.</p>\n<p>매개변수를 제공하지 않은 경우 결과는 <code class=\"language-text\">-Infinity</code> 이다.</p>\n<h2 id=\"설명\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AA%85\" aria-label=\"설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설명</h2>\n<p>max()는 Math의 정적 메서드이기 때문에 항상 Math.max()로 사용해야 한다.</p>\n<h2 id=\"예제\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C\" aria-label=\"예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제</h2>\n<h3 id=\"배열에서-최대값-찾기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C-%EC%B5%9C%EB%8C%80%EA%B0%92-%EC%B0%BE%EA%B8%B0\" aria-label=\"배열에서 최대값 찾기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열에서 최대값 찾기</h3>\n<ol>\n<li>reduce 사용</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> max <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>spread operator 사용</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> max <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"3\">\n<li>Function.prototpye.apply() 사용</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">getMaxOfArray</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">numArray</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> numArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>⚠️ 배열의 요소가 너무 많으면 잘못된 값을 반환할 수 있다고 한다.</p>\n<blockquote>\n<p>both spread (<code class=\"language-text\">...</code>) and <code class=\"language-text\">apply</code> will either fail or return the wrong result if the array has too many elements, because they try to pass the array elements as function parameters</p>\n</blockquote>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Math/max\">Math.max() - JavaScript | MDN</a></p>\n<p>해결책은 위의 예제 1번 처럼 reduce를 사용하는 방법이다.</p>\n<h1 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h1>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Math/max\">Math.max() - JavaScript | MDN (mozilla.org)</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%AC%B8%EB%B2%95\">문법</a></p>\n<ul>\n<li><a href=\"#%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98\">매개변수</a></li>\n<li><a href=\"#%EB%B0%98%ED%99%98-%EA%B0%92\">반환 값</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%84%A4%EB%AA%85\">설명</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%98%88%EC%A0%9C\">예제</a></p>\n<ul>\n<li><a href=\"#%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C-%EC%B5%9C%EB%8C%80%EA%B0%92-%EC%B0%BE%EA%B8%B0\">배열에서 최대값 찾기</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"January 27, 2022","title":"Math.max()","categories":"JavaScript","author":"JaeseokWoo","emoji":"⌨️"},"fields":{"slug":"/Math-max/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://jaeseokwoo.github.io","comments":{"utterances":{"repo":"JaeseokWoo/JaeseokWoo.github.io"}}}}},"pageContext":{"slug":"/cpp-set/","nextSlug":"/Math-max/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}