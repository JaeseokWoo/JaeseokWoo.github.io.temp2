{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"66f3daff-3936-54ed-a88e-cb5ff3597846","excerpt":"유클리드 호제법 또는 유클리드 알고리즘은 2개의 자연수의 최대공약수를 구하는 알고리즘의 하나이다. 호제법이란? 두 수를 나누어 결국 원하는 수를 얻는 알고리즘을 나타낸다. 정의 2개의 자연수 a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면 a와 b의 최대공약수는 b와 r의 최대공약수와 같다. 정리 a와 b의 최대공약수를 (a, b) = r이라고 하면 (a, b) = (b, r) 📝예제 (1071, 1029) = (1029, 42) = (42, 21) = (21, 0) = 21 증명 a, b가 정수이고 a≥b라고 하자. 그러면 a = bq + r을 만족하는 유일한 q, r이 존재한다. (0≤ r < b) (a, b)의 최대공약수가 d이면, a = dα, b = dβ이고 α, β는 서로소(최대공약수가 1)이다. 알고리즘 알고리즘을으로 나타내면 다음과 같습니다. 참조 썽 :: [대수학&정수론]유클리드 호제법의 증명 (tistory.com) 유클리드 호제법 - 위키백과, 우리 모두…","frontmatter":{"categories":"Algorithm","title":"Euclidean algorithm","date":"January 22, 2022"},"fields":{"slug":"/euclidean-algorithm/"}}},{"node":{"id":"c3706ced-92da-5fe3-b2c5-91754f6e00f9","excerpt":"n이 양의 정수일 때, ϕ(n)를 구하는 함수이다. ϕ(n)은 1부터 n까지의 n과 서로소(최대공약수가 1인 관계)인 수를 나타낸다. 항등식 만약 두 정수 m, n이 서로소라면, 다음이 성립힌다. ϕ(mn) = ϕ(m)ϕ(n) 오일러 피 함수 값은 소인수(소수의 인수)를 통해  다음과 같이 구할 수 있다. https://wikimedia.org/api/rest_v1/media/math/render/svg/f435f9cc2f15d34d49245f30d4d85a8cc678fa9d 오일러 곱 공식이라고 불린다. 📝 예제 https://wikimedia.org/api/rest_v1/media/math/render/svg/3ec5709cc7b8119ce7526f223fb42bfd84304286 알고리즘 1부터 n까지 증가하면서 최대공약수가 1인 확인하여 구하는 방법 오일러 곱 공식 구현 위의 float 사용하지 않는 방법 특징 p가 소수일 때, p^k의 오일러 피 함수의 값은 https:/…","frontmatter":{"categories":"Algorithm","title":"Euler’s phi","date":"January 22, 2022"},"fields":{"slug":"/euler-phi/"}}},{"node":{"id":"c72c5538-0d5c-55f6-a921-eabe94264015","excerpt":"메모리 상에 가상의 테이블을 저장 재퀴 쿼리를 이용하여 실제로 테이블을 생성하거나 데이터 삽입(INSERT)을 하지 않아도 가상 테이블을 생성할 수 있다. 📝예시 hour(컬럼)이  초기값 0부터 제어문에 합당하는 23까지의 데이터를 갖는 가상 테이블 생성 📝예시","frontmatter":{"categories":"SQL","title":"WITH RECURSIVE","date":"January 21, 2022"},"fields":{"slug":"/with-recursive/"}}},{"node":{"id":"07d6d208-1c69-5bf1-b465-ceea328b9472","excerpt":"1. HTTP(Hyper Text Transfer Protocol) 서버와 클라이언트가 데이터를 주고받기 위한 프로토콜입니다. 즉 서버는 80번 포트에서 요청을 대기하고 있고, 클라이언트는 80번 포트로 요청을 보내게 됩니다. HTTP 구조 HTTP는 애플리케이션 레벨의 프로토콜로 TCP/IP 위에서 동작합니다. HTTP는 상태를 가지고 있지 않는 Stateless 프로토콜이며, Method, Path, Version, Headers, Body 등으로 구성되어 있습니다. 사진 하지만 HTTP는 암호화가 되지 않은 평문 데이트를 전송하는 프로토콜이기 때문에, 제3자가 정보를 조회할 수 있는 보안적인 문제가 있다. 2. HTTPS(Hyper Text Transfer Protocol Secure) HTTP에 데이터 암호화가 추가된 프로토콜입니다. 443번 포트를 사용하며, 제3자가 정보를 볼 수 없도록 암호화를 지원합니다. HTTPS의 동작 과정 HTTPS는 대칭키 암호화와 비대칭 키 …","frontmatter":{"categories":"네트워크 면접","title":"HTTP와 HTTPS","date":"January 19, 2022"},"fields":{"slug":"/http-https/"}}},{"node":{"id":"c13886d6-6305-583b-ab78-9c1281859f99","excerpt":"REST API REST는 Representational State Transfer라는 용어의 약자이다. REST API는 REST 아키텍처 스타일의 디자인 원칙을 준수하는 API입니다. 즉, HTTP URI(Uniform Resource Identifier)를 통해 자원(Resource)을 명시하고, HTTP Method를 통해 해당 자원에 CRUD연산을 적용하는 것을 의미한다. 구성 REST API는 다음으로 구성되어 있습니다. 자원(Resource) - URI 행위(Verb) - HTTP Method 표현(Representations) 디자인 가이드 1. REST API 중심 규칙 URI는 정보의 자원을 표현해야한다. 자원에 대한 행위는 HTTP Method로 표현한다. 2. URI 설계시 주의할 점 슬래시 구분자(/)는 계층 관계를 나타내는데 사용 URI 마지막 문자로 슬래시(/)를 포함하지 않는다. 하이픈(-)은 URI 가독성을 높이는데 사용 밑줄(_)은 URI에 사용하지…","frontmatter":{"categories":"네트워크 면접","title":"REST API","date":"January 19, 2022"},"fields":{"slug":"/REST-API/"}}},{"node":{"id":"b1a183d0-fade-50d2-9919-ae25ce20a07a","excerpt":"REGEXP는 LIKE를 이용한 검색과 달리 Regular Expression(정규 표현식)을 이용해 검색한다. REGEXP를 사용하면 SQL에서 정규표현식을 활용하여 기본 연산자보다 복잡한 문자열 조건을 걸어 데이터를 검색할 수 있다. Regular Expression(정규 표현식) 정규 표현식은 특정한 규칙을 가진 문자열의 집합을 표현하는데 사용하는 형식 언어이다. 문자열을 처리하는 방법 중의 하나로, 특정한 조건의 문자를 검색하거나 치환할 때 매우 간쳔하게 처리할 수 있도록 해준다. 정규 표현식은 Pattern을 사용해 문자열을 처리한다. Matching Pattern 기능 예시 설명 . 문자 하나 ”…” 문자열의 길이가 세 글자 이상인 것을 찾음. I I로 구분된 문자에 해당하는 문자열을 찾음. “데이터I데이타” ‘데이터’ 또는 ‘데이타’에 해당하는 문자열을 찾음. [] [] 안에 나열된 패턴에 해당하는 문자열을 찾음. “[123]d” 대상 문자열에서 ‘1d’ 또는 ‘2d’…","frontmatter":{"categories":"SQL","title":"REGEXP","date":"January 19, 2022"},"fields":{"slug":"/regexp/"}}},{"node":{"id":"eca40be1-5b3a-5247-a1a0-927677f9a665","excerpt":"제 블로그의 테마나 Gatsby의 다른 테마를 활용해서 Github Blog를 만들고 싶은 분들이 계실텐데요! 이런 분들에게 도움을 드리고자 이 글을 쓰게 되었습니다. 잘 안되는 부분이나 궁금한 점을 댓글로 남겨주면 확인해보고 답변 드리도록 하겠습니다! 1. Repository 생성하기 GitHub Blog를 만들려면 Github에 Repository를 생성해야 합니다.  GitHub에 로그인 한 뒤에 우측 상단에 있는 New Repository 버튼을 클릭하면 repository 생성 페이지로 이동하게 됩니다. 이 때 Import a repository 버튼을 클릭합니다.  아래 페이지에 도달하시면 두 가지 정보를 넣어주셔야 하는데, Your old repository’s clone URL에는 사용하고자 하는 gatsby 테마가 있는 repository의 주소를 넣어주시면 됩니다. 제 블로그 테마를 쓰고 싶으신 분들은 여기에 https://github.com/zoomKoding/…","frontmatter":{"categories":"블로그 featured","title":"Gatsby 테마로 GitHub Blog 만들기","date":"July 06, 2021"},"fields":{"slug":"/gatsby-github-blog/"}}},{"node":{"id":"782b5153-87bd-50da-b85c-3a2a5401699b","excerpt":"👋 소개 블로그를 직접 운영하면서 조금씩 그려봤던 이상적인 개발 블로그 테마를 Gatsby를 통해 만들어보게 되었습니다. 이 테마가 블로그를 운영하고자 하시는 분들에게 자신의 이야기를 잘 담을 수 있는 공간이 되었으면 좋겠습니다.🙌 블로그 테마가 맘에 드셨다면 아래 과정을 통해 자신의 블로그를 만들어보시길 바랍니다! 혹시 만드시는 과정에서 궁금하신 점이나 어려움이 있으시다면 이슈를 통해 문의 남겨주세요! 스타는 블로그 테마를 지속적으로 발전시키는데 큰 힘이 됩니다!⭐️ 🚀 시작하기 Github Page나 Netlify 중 원하시는 배포 환경에 따라 다음 과정을 진행하시면 빠르게 블로그를 만드실 수 있습니다. 🦖 GitHub Page로 만들기 깃헙 페이지를 통해 블로그를 만드시다면 아래 글을 참고해주세요! Gatsby 테마로 GitHub Blog 만들기 🔧 Netlify로 만들기 아래 버튼을 활용하면 개인 계정에 를 사용하고 있는 Repository 생성과 Netlify에 배포를 동시…","frontmatter":{"categories":"블로그 featured","title":"쉽고 빠르게 나만의 개츠비(Gatsby) 블로그 만들기","date":"March 22, 2021"},"fields":{"slug":"/gatsby-starter-zoomkoding-introduction/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"우재석","bio":{"role":"개발자","description":["사람에 가치를 두는","능동적으로 일하는","이로운 것을 만드는"],"thumbnail":"sample.png"},"social":{"github":"https://github.com/JaeseokWoo","linkedIn":"","email":"jaeseokw@gmail.com"}}}}},"pageContext":{}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437","3350743975"]}