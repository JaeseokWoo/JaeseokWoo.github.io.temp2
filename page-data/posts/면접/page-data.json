{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/면접",
    "result": {"pageContext":{"currentCategory":"면접","categories":["All","CPP","JavaScript","Algorithm","SQL","네트워크","면접"],"edges":[{"node":{"id":"07d6d208-1c69-5bf1-b465-ceea328b9472","excerpt":"1. HTTP(Hyper Text Transfer Protocol) 서버와 클라이언트가 데이터를 주고받기 위한 프로토콜입니다. 즉 서버는 80번 포트에서 요청을 대기하고 있고, 클라이언트는 80번 포트로 요청을 보내게 됩니다. HTTP 구조 HTTP는 애플리케이션 레벨의 프로토콜로 TCP/IP 위에서 동작합니다. HTTP는 상태를 가지고 있지 않는 Stateless 프로토콜이며, Method, Path, Version, Headers, Body 등으로 구성되어 있습니다. 사진 하지만 HTTP는 암호화가 되지 않은 평문 데이트를 전송하는 프로토콜이기 때문에, 제3자가 정보를 조회할 수 있는 보안적인 문제가 있다. 2. HTTPS(Hyper Text Transfer Protocol Secure) HTTP에 데이터 암호화가 추가된 프로토콜입니다. 443번 포트를 사용하며, 제3자가 정보를 볼 수 없도록 암호화를 지원합니다. HTTPS의 동작 과정 HTTPS는 대칭키 암호화와 비대칭 키 …","fields":{"slug":"/http-https/"},"frontmatter":{"categories":"네트워크 면접","title":"HTTP와 HTTPS","date":"January 19, 2022"}},"next":{"fields":{"slug":"/REST-API/"}},"previous":{"fields":{"slug":"/regexp/"}}},{"node":{"id":"c13886d6-6305-583b-ab78-9c1281859f99","excerpt":"REST API REST는 Representational State Transfer라는 용어의 약자이다. REST API는 REST 아키텍처 스타일의 디자인 원칙을 준수하는 API입니다. 즉, HTTP URI(Uniform Resource Identifier)를 통해 자원(Resource)을 명시하고, HTTP Method를 통해 해당 자원에 CRUD연산을 적용하는 것을 의미한다. 구성 REST API는 다음으로 구성되어 있습니다. 자원(Resource) - URI 행위(Verb) - HTTP Method 표현(Representations) 디자인 가이드 1. REST API 중심 규칙 URI는 정보의 자원을 표현해야한다. 자원에 대한 행위는 HTTP Method로 표현한다. 2. URI 설계시 주의할 점 슬래시 구분자(/)는 계층 관계를 나타내는데 사용 URI 마지막 문자로 슬래시(/)를 포함하지 않는다. 하이픈(-)은 URI 가독성을 높이는데 사용 밑줄(_)은 URI에 사용하지…","fields":{"slug":"/REST-API/"},"frontmatter":{"categories":"네트워크 면접","title":"REST API","date":"January 19, 2022"}},"next":null,"previous":{"fields":{"slug":"/http-https/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}