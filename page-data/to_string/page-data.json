{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/to_string/",
    "result": {"data":{"cur":{"id":"6b3c69a7-b7c8-5b11-8f2c-e2c55281cf31","html":"<h1 id=\"to_string\" style=\"position:relative;\"><a href=\"#to_string\" aria-label=\"to_string permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to_string</h1>\n<h2 id=\"함수-원형과-설명\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%9B%90%ED%98%95%EA%B3%BC-%EC%84%A4%EB%AA%85\" aria-label=\"함수 원형과 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 원형과 설명</h2>\n<h3 id=\"헤더파일\" style=\"position:relative;\"><a href=\"#%ED%97%A4%EB%8D%94%ED%8C%8C%EC%9D%BC\" aria-label=\"헤더파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>헤더파일</h3>\n<string>\n<h3 id=\"함수-원형\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%9B%90%ED%98%95\" aria-label=\"함수 원형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 원형</h3>\n<ul>\n<li>string to_string (int num);</li>\n<li>string to_string (long num);</li>\n<li>string to_string (long long num);</li>\n<li>string to_string (unsigned num);</li>\n<li>string to_string (unsigned long num);</li>\n<li>string to_string (unsigned long long num);</li>\n<li>string to_string (float num);</li>\n<li>string to_string (double num);</li>\n<li>string to_string (long double num);</li>\n</ul>\n<h3 id=\"설명\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AA%85\" aria-label=\"설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설명</h3>\n<p>to_string 함수는 숫자 자료형의 데이터를 안전하게 스트링 자료형으로 변경하도록 하는 함수입니다.</p>\n<p>함수 오버로딩(overloading)을 통해 하나의 함수명에 다른 매개변수가 올 수 있습니다.</p>","excerpt":"to_string 함수 원형과 설명 헤더파일 함수 원형 string to_string (int num); string to_string (long num); string to_string (long long num); string to_string (unsigned num); string to_string (unsigned long num); string to_string (unsigned long long num); string to_string (float num); string to_string (double num); string to_string (long double num); 설명 to_string 함수는 숫자 자료형의 데이터를 안전하게 스트링 자료형으로 변경하도록 하는 함수입니다. 함수 오버로딩(overloading)을 통해 하나의 함수명에 다른 매개변수가 올 수 있습니다.","frontmatter":{"date":"January 30, 2022","title":"to_string","categories":"CPP","author":"JaeseokWoo","emoji":"⌨️"},"fields":{"slug":"/to_string/"}},"next":{"id":"7dc12f75-1ab7-597e-8cfb-849e2ebb85cf","html":"<h1 id=\"set\" style=\"position:relative;\"><a href=\"#set\" aria-label=\"set permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set</h1>\n<p>C++의 Set은 노드 기반 컨테이너이며 균형 이진트리로 구현되어 있습니다.</p>\n<p>Key라 불리는 원소들의 집합으로 이루어진 컨테이너 입니다.(Key 중복X)</p>\n<p>원소가 삽입되면 자동으로 정렬되고, default 정렬 기준은 오름차순입니다.</p>\n<h2 id=\"사용법\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용법</h2>\n<p><set> 헤더 파일에 들어있습니다.</p>\n<p>기본 선언 방법은 <code class=\"language-text\">set&lt;[Data Type] > [변수 이름];</code> 입니다.</p>\n<h3 id=\"생성자\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90\" aria-label=\"생성자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성자</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> s<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 기본 선언</span>\nset<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">s2</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// s1을 복사한 s2</span></code></pre></div>\n<h3 id=\"멤버-함수\" style=\"position:relative;\"><a href=\"#%EB%A9%A4%EB%B2%84-%ED%95%A8%EC%88%98\" aria-label=\"멤버 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>멤버 함수</h3>\n<ol>\n<li>begin()</li>\n</ol>\n<p>반환: 맨 첫번째 원소를 가리키는 반복자를 리턴(참조)</p>\n<p>예시: <code class=\"language-text\">set&lt;int>::iterator iter = s.begin();</code></p>\n<ol start=\"2\">\n<li>end()</li>\n</ol>\n<p>반환: 맨 마지막 원소의 다음을 가리키는 반복자를 리턴(참조)</p>\n<p>예시: <code class=\"language-text\">set&lt;int>::iterator iter = s.end();</code></p>\n<ol start=\"3\">\n<li>rbegin(), rend()</li>\n</ol>\n<p>begin(), end()와 반대로 작동하는 멤버함수</p>\n<p>역으로 출력하고 싶을 때 사용</p>\n<p>예시:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>iter <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">rbegin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> iter <span class=\"token operator\">!=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">rend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> iter<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span> iter <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"4\">\n<li>clear()</li>\n</ol>\n<p>모든 원소를 제거, 초기화할 때 사용</p>\n<p>예시: <code class=\"language-text\">s.clear();</code></p>\n<ol start=\"5\">\n<li>count(k)</li>\n</ol>\n<p>원소 k의 갯수를 반환, set은 항상 0, 1을 반환</p>\n<p>예시: <code class=\"language-text\">int count = s.count(1);</code></p>\n<ol start=\"6\">\n<li>empty()</li>\n</ol>\n<p>비어있는지 확인, 반환은 true, false</p>\n<p>예시: <code class=\"language-text\">if(s.empty()) { ... }</code></p>\n<ol start=\"7\">\n<li>insert(k)</li>\n</ol>\n<p>원소 k를 삽입합니다.</p>\n<p>반환: <code class=\"language-text\">pair&lt;iterator, boo></code> pair.first: 삽입한 원소를 가리키는 반복자, pair.second: true(성공) / false(실패)</p>\n<p>예시: <code class=\"language-text\">s.insert(1);</code></p>\n<ol start=\"8\">\n<li>erase(iter)</li>\n</ol>\n<p>iter가 가리키는 원소를 제거</p>\n<p>반환: 제거 한 원소의 다음 원소를 가리키는 반복자를 리턴</p>\n<p>예시: <code class=\"language-text\">iter = s.erase(iter);</code></p>\n<ol start=\"9\">\n<li>find(k)</li>\n</ol>\n<p>반환: 원소 k를 가리키는 반복자를 반환, 원소 k가 없으면 s.end()와 같은 반복자를 반환</p>\n<p>예시: <code class=\"language-text\">iter = s.find(1);</code></p>\n<ol start=\"10\">\n<li>s2.swap(s1)</li>\n</ol>\n<p>s1과 s2를 바꾼다.</p>\n<ol start=\"11\">\n<li>s.upper_bound(k)</li>\n</ol>\n<p>원소 k가 끝나는 구간의 반복자를 반환한다.</p>\n<p>예시: <code class=\"language-text\">iter = s.upper_bound(1);</code></p>\n<ol start=\"12\">\n<li>s.lower_bound(k)</li>\n</ol>\n<p>원소 k가 시작하는 구간의 반복자를 반환</p>\n<p>예시: <code class=\"language-text\">iter = s.lower_bound(1);</code></p>\n<ol start=\"13\">\n<li>s.equal_range(k)</li>\n</ol>\n<p>원소 k가 시작하는 구간과 끝나는 구간의 반복자 pair 객체를 반환</p>\n<p>lower_bound(k)와 upper_bound(k)를 pair 객체에 담아서 반환한다.</p>\n<ol start=\"14\">\n<li>s.size()</li>\n</ol>\n<p>원소의 갯수를 반환</p>\n<h1 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h1>\n<p><a href=\"https://blockdmask.tistory.com/79\">[C++] set container 정리 및 사용법 (tistory.com)</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%82%AC%EC%9A%A9%EB%B2%95\">사용법</a></p>\n<ul>\n<li><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90\">생성자</a></li>\n<li><a href=\"#%EB%A9%A4%EB%B2%84-%ED%95%A8%EC%88%98\">멤버 함수</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"January 28, 2022","title":"Set","categories":"CPP","author":"JaeseokWoo","emoji":"⌨️"},"fields":{"slug":"/cpp-set/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://jaeseokwoo.github.io","comments":{"utterances":{"repo":"JaeseokWoo/JaeseokWoo.github.io"}}}}},"pageContext":{"slug":"/to_string/","nextSlug":"/cpp-set/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}